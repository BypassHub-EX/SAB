local a = "https://keysite-production.up.railway.app/public/keys.txt"
local b = "https://loot-link.com/s?gbTnLVac"
local c = "LazyDevs_LastKey.txt"
local d = game:GetService("Players")
local e = d.LocalPlayer
local f = game:GetService("TeleportService")
local g = game:GetService("RunService")
local h = game:GetService("UserInputService")

local function i()
    local j, k = pcall(function() return game:HttpGet(a, true) end)
    if not j or not k then return {} end
    local l = {}
    for m in string.gmatch(k, "[^\r\n]+") do
        local n = string.gsub(m, "^%s*(.-)%s*$", "%1")
        if n ~= "" then table.insert(l, n) end
    end
    return l
end

local function o(p)
    if not p or #p == 0 then return false end
    for _, q in ipairs(i()) do
        if p == q then return true end
    end
    return false
end

local function r(s)
    if writefile then pcall(function() writefile(c, s) end) end
end

local function t()
    if readfile and isfile and isfile(c) then
        local u, v = pcall(function() return readfile(c) end)
        if u and v and #v > 0 then return v end
    end
    return nil
end

local w = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local x = w:CreateWindow({
    Name = "Lazy Devs | SAB Hub",
    LoadingTitle = "Welcome Back",
    LoadingSubtitle = "Authentication Required",
    Theme = "Ocean",
    ToggleUIKeybind = Enum.KeyCode.K,
    KeySystem = false
})

local y, z = false, false
local A = {
    B = { C = false, D = false, E = false, F = false, G = false },
    H = { I = false, J = false, K = false, L = false },
    M = { N = false, O = 16, P = false, Q = false, R = 50 },
    S = { T = false, U = "https://raw.githubusercontent.com/BypassHub-EX/SAB/refs/heads/main/main" },
    V = { W = "" }
}

g.Heartbeat:Connect(function()
    if A.M.P and e.Character and e.Character:FindFirstChildOfClass("Humanoid") then
        if h:IsKeyDown(Enum.KeyCode.Space) then
            e.Character:TranslateBy(Vector3.new(0, 0.5, 0))
        end
    end
    if A.M.Q and e.Character and e.Character:FindFirstChildOfClass("Humanoid") then
        local X = e.Character:FindFirstChildOfClass("Humanoid")
        X.UseJumpPower = true
        X.JumpPower = math.min(A.M.R, 175)
    end
    if e.Character and e.Character:FindFirstChildOfClass("Humanoid") then
        e.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = A.M.O
    end
end)

local function Y()
    if y then return end
    y = true

    local Z = x:CreateTab("Information")
    Z:CreateSection("Main")
    Z:CreateLabel("Lazy Devs | SAB Hub")
    Z:CreateLabel("Developed by Lazy Devs")
    Z:CreateLabel("Version 1.0.0")
    Z:CreateLabel("Updated August 2025")

    local _ = x:CreateTab("Stealer")
    _:CreateSection("Steal Options")
    _:CreateToggle({
        Name = "Instant Steal",
        CurrentValue = false,
        Callback = function(a1)
            A.B.C = a1
            if a1 then
                w:Notify({Title="Stealer", Content="You instantly stole a Brainrot!", Duration=3})
                if A.B.G then
                    e:Kick("You have stolen a Brainrot — AutoKick activated!")
                end
            end
        end
    })
    _:CreateToggle({
        Name = "Auto Steal",
        CurrentValue = false,
        Callback = function(a2)
            A.B.D = a2
            if a2 then
                w:Notify({Title="Stealer", Content="Auto Steal running...", Duration=3})
                if A.B.G then
                    e:Kick("You auto-stole — AutoKick activated!")
                end
            end
        end
    })
    _:CreateToggle({
        Name = "Auto Kick",
        CurrentValue = false,
        Callback = function(a3) A.B.G = a3 end
    })

    local a4 = x:CreateTab("Player")
    a4:CreateSection("Movement")
    a4:CreateSlider({ Name = "Speed Boost", Range = {16,150}, Increment = 2, Suffix = "WalkSpeed", CurrentValue = 16, Callback = function(a5) A.M.O = a5 end })
    a4:CreateToggle({ Name = "AirWalk", CurrentValue = false, Callback = function(a6) A.M.P = a6 end })
    a4:CreateToggle({ Name = "Jump Boost", CurrentValue = false, Callback = function(a7) A.M.Q = a7 end })
    a4:CreateSlider({ Name = "Jump Boost Value", Range = {0,175}, Increment = 5, Suffix = "Power", CurrentValue = 50, Callback = function(a8) A.M.R = a8 end })

    local a9 = x:CreateTab("Finder")
    a9:CreateSection("Scripts / Servers")
    a9:CreateToggle({ Name = "Auto Load Script", CurrentValue = false, Callback = function(a10)
        A.S.T = a10
        if a10 then
            local a11, a12 = pcall(function() return game:HttpGet(A.S.U, true) end)
            if a11 and a12 then
                loadstring(a12)()
                w:Notify({Title="Finder",Content="Script loaded!",Duration=3})
            else
                w:Notify({Title="Finder",Content="Failed to load script.",Duration=3})
            end
        end
    end })
    a9:CreateInput({ Name = "Script URL", PlaceholderText = "Paste script URL...", Callback = function(a13) A.S.U = a13 end })

    local a14 = x:CreateTab("Server")
    a14:CreateSection("Server Tools")
    a14:CreateButton({ Name = "Rejoin", Callback = function() f:Teleport(game.PlaceId, e) end })
    a14:CreateButton({ Name = "Copy Job ID", Callback = function() if setclipboard then setclipboard(game.JobId) end end })
end

local a15 = x:CreateTab("Key")
a15:CreateSection("Validation")
local a16 = a15:CreateLabel("Status: idle")
local a17 = t() or ""
a15:CreateInput({ Name = "Enter Key", PlaceholderText = "Paste your key...", CurrentValue = a17, Callback = function(a18) a17 = a18 end })
a15:CreateButton({
    Name = "Validate Key",
    Callback = function()
        if z or y then return end
        z = true
        if a17 == "" then
            w:Notify({ Title = "Key", Content = "Please enter a key.", Duration = 3 })
            z = false
            return
        end
        if o(a17) then
            a16:Set("Status: ✅ Valid")
            w:Notify({ Title = "Key", Content = "Key accepted.", Duration = 3 })
            r(a17)
            Y()
            a15.TabFrame.Visible = false
            x:SelectTab(1)
        else
            a16:Set("Status: ❌ Invalid")
            w:Notify({ Title = "Key", Content = "Invalid key.", Duration = 3 })
        end
        z = false
    end
})
a15:CreateButton({
    Name = "Get Key",
    Callback = function()
        if setclipboard then
            setclipboard(b)
            w:Notify({ Title = "Get Key", Content = "Key link copied.", Duration = 3 })
        else
            w:Notify({ Title = "Get Key", Content = b, Duration = 5 })
        end
    end
})

if a17 ~= "" and o(a17) then
    a16:Set("Status: Cached key valid")
    Y()
    a15.TabFrame.Visible = false
    x:SelectTab(1)
end
